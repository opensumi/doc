{"componentChunkName":"component---node-modules-opensumi-gatsby-theme-site-templates-document-tsx","path":"/zh/docs/develop/basic-design/core-modules","result":{"data":{"site":{"siteMetadata":{"title":"OpenSumi","githubUrl":"https://github.com/opensumi/core","docsUrl":"https://github.com/opensumi/docs","docs":[{"slug":"integrate/quick-start","title":{"zh":"快速开始","en":"Quick Start"},"order":1},{"slug":"integrate/universal-integrate-case","title":{"zh":"常见集成场景","en":"Integrate Case"},"order":2},{"slug":"integrate/module-usage","title":{"zh":"模块使用","en":"Module Usage"},"order":3},{"slug":"integrate/extensions-usage","title":{"zh":"插件使用","en":"Extensions Usage"},"order":4},{"slug":"integrate/browser-extension","title":{"zh":"浏览器插件","en":"Browser Extension"},"order":5},{"slug":"develop/basic-design","title":{"zh":"基础设计","en":"Basic Design"},"order":4},{"slug":"develop/module-apis","title":{"zh":"模块 API","en":"Modules API"},"order":5},{"slug":"develop/sample","title":{"zh":"经典案例","en":"Sample"},"order":6},{"slug":"extension/develop","title":{"zh":"OpenSumi 插件开发","en":"Extension Develop"},"order":2},{"slug":"extension/interface","title":{"zh":"OpenSumi API","en":"OpenSumi API"},"order":3},{"slug":"extension/contributes","title":{"zh":"OpenSumi 贡献点","en":"OpenSumi Contribute Points"},"order":4},{"slug":"extension/vscode","title":{"zh":"VS Code 插件开发","en":"VS Code Extension Develop"},"order":5}]},"pathPrefix":""},"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"OpenSumi 的仓库代码是通过 "},{"type":"element","tagName":"a","properties":{"href":"https://www.perforce.com/blog/vcs/what-monorepo","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"Monorepo"}]},{"type":"text","value":" 的形式组织的，"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"packages"}]},{"type":"text","value":" 目录下的都是 OpenSumi 内置模块，截止 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"2.8.0"}]},{"type":"text","value":" 版本，OpenSumi 代码仓库中一共有 53 个模块，它们有些是完全独立可插拔的功能，而有些则是提供核心功能的模块。也有一部分由于早期的设计不适用于目前的架构，所以可能在未来的某个时期被移除或者合并到其他模块。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"核心模块介绍","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97%E4%BB%8B%E7%BB%8D","ariaLabel":"核心模块介绍 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"核心模块介绍"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"OpenSumi 有几十个模块，但我们开发过程中并不是每个模块都要接触的，一般情况下我们需要对以下模块有一定的了解。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"core-browser","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#core-browser","ariaLabel":"core browser permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Core Browser"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"core-browser 定位是对 OpenSumi 前端部分的运行时管理，包括前端的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ClientApp"}]},{"type":"text","value":" 以及 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Contribution"}]},{"type":"text","value":" 机制，另外 core-browser 还负责初始化与后端的 RPC 连接，"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"不可被热插拔"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"core-node","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#core-node","ariaLabel":"core node permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Core Node"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"与 core-browser 类似，core-node 定位对 OpenSumi 后端部分的运行时管理，包括了 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ServerApp"}]},{"type":"text","value":" 以及后端的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Contribution"}]},{"type":"text","value":" 机制，同样它"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"不可被热插拔"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"monaco","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#monaco","ariaLabel":"monaco permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Monaco"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"monaco 模块主要作用是将 Monaco Editor 的 API 重新组织并导出，因为 OpenSumi 一些编辑器功能依赖 Monaco Editor 的私有 API，所以 monaco 模块中的一些 API 会经过重新组织后导出，以供其他模块使用。除此之外，monaco 模块也提供了一些 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Contribution Point"}]},{"type":"text","value":" ，其他模块可以注册并实现、覆盖一些内置的 Service。monaco 模块"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"不可被热插拔"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"file-service","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#file-service","ariaLabel":"file service permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"File Service"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"file-service 是内置的文件服务实现，大部分情况下我们都是基于原生的文件系统，而 file-service 就是默认实现，除此之外，OpenSumi 也支持通过自定义 file-service 的方式来实现其他文件系统，例如 MemoryFS、BrowserFS 等。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"file-tree-next","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#file-tree-next","ariaLabel":"file tree next permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"File Tree Next"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"文件树的默认实现，依赖 file-service 来进行文件树的读取、列表展示等功能。除此之外，file tree 会读取来自 decorations 模块注册的「装饰」来显示文件的状态，例如在 Git 中该文件是否修改等。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"terminal-next","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#terminal-next","ariaLabel":"terminal next permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Terminal Next"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"终端功能的实现，包含前端渲染部分与后端的 Shell 进程管理。终端模块提供了独立的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"TerminalNetworkContribution"}]},{"type":"text","value":" 贡献点，支持通过自定义外部的网络通道(WebSocket/Socket)来与后端 Shell 进程连接。同时它还提供了 VS Code Terminal 相关 API。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"opensumi-extension","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#opensumi-extension","ariaLabel":"opensumi extension permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"OpenSumi Extension"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"extension 是 OpenSumi 核心的插件系统实现，包括了前端视图插件、Node/VS Code 插件进程环境、WebWorker 插件环境等。同时也包含了所有 OpenSumi 以及兼容的 VS Code 插件 API 实现，extension 依赖了大部分功能模块，同时它可以被直接移除(但也会失去所有插件功能)。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"extension-manager","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#extension-manager","ariaLabel":"extension manager permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Extension Manager"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"extension-manager 主要负责插件的安装、管理、启/禁用等功能，并且支持自定义的源。比较特殊的是，extension-manager 是唯一可以直接依赖 extension 的模块，因为安装、启用插件后需要同步插件状态并激活插件。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"模块分层","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E6%A8%A1%E5%9D%97%E5%88%86%E5%B1%82","ariaLabel":"模块分层 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"模块分层"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"虽然 OpenSumi 使用 Monorepo 组织代码结构，每个模块之间的「代码」关系看上去都是扁平的，但实际上模块之间的逻辑关系是分层的，例如前面提到的 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"core-browser"}]},{"type":"text","value":" 、"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"core-node"}]},{"type":"text","value":"、"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"file-service"}]},{"type":"text","value":"、"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"connection"}]},{"type":"text","value":"、"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"monaco"}]},{"type":"text","value":" 等模块在大部分情况下是必不可少的，我们可以将其看作"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"底层模块"}]},{"type":"text","value":"，他们无法被安全的移除或「热插拔」。而对于像 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"opened-editor"}]},{"type":"text","value":"、"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"markdown"}]},{"type":"text","value":"、"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"search"}]},{"type":"text","value":" 等模块，他们的职责比较单一，仅提供部分视图及功能，移除它们不会对 OpenSumi 本身产生破坏性影响，我们称之为 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"功能模块"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"判断一个模块是否属于"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"底层模块"}]},{"type":"text","value":"或"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"核心模块"}]},{"type":"text","value":"的一个重要依据就是其是否能被安全的移除。如果我们接收「没有插件功能」，那么实际上 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"extension"}]},{"type":"text","value":" 也可以作为功能模块，这样其依赖的大多数功能模块都可以被安全的移除。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"模块列表及概述","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E6%A8%A1%E5%9D%97%E5%88%97%E8%A1%A8%E5%8F%8A%E6%A6%82%E8%BF%B0","ariaLabel":"模块列表及概述 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"模块列表及概述"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"bash"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-bash"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","builtin","class-name"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"\n├── addons                        "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 用于依赖一些模块来实现可能包含副作用的功能，例如监听 file-tree 的拖放事件，并调用 file-service 的 API 来写入文件等"}]},{"type":"text","value":"\n├── comments                      "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 用于实现内置的 Code Review 评论功能，提供了标准的 VS Code Comments API 实现"}]},{"type":"text","value":"\n├── components                    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# OpenSumi 各个模块共用的一系列基础组件"}]},{"type":"text","value":"\n├── connection                    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 用于实现 Web 及 Electron 端的底层 RPC 框架以及对应的连接管理"}]},{"type":"text","value":"\n├── core-browser                  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# Web 端功能的核心框架，包括整个 OpenSumi 的 ClientApp 及生命周期实现"}]},{"type":"text","value":"\n├── core-common                   "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 包含了一些基础类型，例如可能被许多模块依赖的内置 Contribution"}]},{"type":"text","value":"\n├── core-electron-main            "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 包含了 Electron 端主进程的相关基础功能"}]},{"type":"text","value":"\n├── core-node                     "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# Node 端功能的核心框架，包括 OpenSumi 的 ServerApp 及生命周期实现"}]},{"type":"text","value":"\n├── debug                         "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# Debugger 功能模块，实现了标准的 Debug Adapter Protocol 接口，并提供对应的 VS Code API 实现"}]},{"type":"text","value":"\n├── decoration                    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 用于管理和注册除编辑器之外的一些装饰，例如文件树视图中对于 Git 状态的装饰"}]},{"type":"text","value":"\n├── editor                        "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 对 Monaco Editor 的上层封装模块，提供了包括编辑器、编辑器组操作及相关管理功能"}]},{"type":"text","value":"\n├── electron-basic                "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# Electron 端的基础定制功能，包含了例如 Welcome 界面的基础实现"}]},{"type":"text","value":"\n├── explorer                      "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 用于为 FileTree 提供基础的视图容器，待废弃"}]},{"type":"text","value":"\n├── express-file-server           "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# OpenSumi 内置的静态资源服务器，主要提供例如插件资源读取等功能"}]},{"type":"text","value":"\n├── extension-manager             "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 内置的插件安装、管理等功能"}]},{"type":"text","value":"\n├── extension-storage             "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 用于管理插件相关的存储，提供了 Storage 相关的 VS Code API"}]},{"type":"text","value":"\n├── file-scheme                   "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 提供对 file:// 协议的文件处理操作，例如前端使用何种视图来展示文件，以及后端如何进行文件保存等操作"}]},{"type":"text","value":"\n├── file-search                   "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 文件搜索服务，基于 vscode-ripgrep 实现的文件搜索(非内容)"}]},{"type":"text","value":"\n├── file-service                  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 文件服务的抽象，集成时可以注册自定义的文件处理服务，并且内置了基于原生 FS 的文件服务"}]},{"type":"text","value":"\n├── file-tree-next                "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 文件树实现"}]},{"type":"text","value":"\n├── i18n                          "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 内置的 i18n 功能及语言包"}]},{"type":"text","value":"\n├── extension             "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# OpenSumi 的插件系统实现，包括插件运行时及插件 API 实现"}]},{"type":"text","value":"\n├── keymaps                       "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 快捷键功能实现"}]},{"type":"text","value":"\n├── logs-core                     "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 内置的 logger 实现"}]},{"type":"text","value":"\n├── main-layout                   "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# OpenSumi 主界面的框架实现，可以基于 Layout 做高自由度的定制"}]},{"type":"text","value":"\n├── markdown                      "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 内置的 Markdown 文件预览功能"}]},{"type":"text","value":"\n├── markers                       "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 问题面板实现，基于 LSP 提供的诊断信息并应用到编辑器，提供了标准的 VS Code Diagnostic API 实现"}]},{"type":"text","value":"\n├── menu-bar                      "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 内置的菜单栏实现，在 Web 端使用基于 DOM 的菜单，而 Electron 端使用原生菜单"}]},{"type":"text","value":"\n├── monaco                        "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 对于 Monaco Editor 的引用及包装，提供了 Contribution，以便其他模块(Editor)注册或覆盖一些内置的 Service"}]},{"type":"text","value":"\n├── monaco-enhance                "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 基于 Monaco 的一些上层封装，提供了一些基础的 ZoneWidget、OverlayWidget 等小组件"}]},{"type":"text","value":"\n├── opened-editor                 "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 「打开的编辑器」功能实现"}]},{"type":"text","value":"\n├── outline                       "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 「大纲」功能实现，基于 LSP 的符号接口，提供了基于 TreeView 的符号跳转等功能"}]},{"type":"text","value":"\n├── output                        "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 输出功能实现，并提供标准的 VS Code Output API"}]},{"type":"text","value":"\n├── overlay                       "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# OpenSumi 内置的浮层功能实现，例如 message、notification、modal 等"}]},{"type":"text","value":"\n├── preferences                   "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 设置面板及功能的实现"}]},{"type":"text","value":"\n├── process                       "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 提供便捷的子进程管理功能，是一个 Utils 模块"}]},{"type":"text","value":"\n├── quick-open                    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 快速打开功能实现，OpenSumi 的快速打开使用独立的实现，与 Monaco Editor 自带的功能类似"}]},{"type":"text","value":"\n├── scm                           "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# Source Control 功能抽象接口，并提供了标准的 VS Code SCM API，例如 Git 插件就是基于 SCM 提供的接口实现的"}]},{"type":"text","value":"\n├── search                        "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 跨文件文本搜索功能实现"}]},{"type":"text","value":"\n├── startup                       "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 示例模块，开发状态下可以基于 startup 模块来启动 OpenSumi"}]},{"type":"text","value":"\n├── status-bar                    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 状态栏功能实现，并提供标准的 VS Code StatusBar API"}]},{"type":"text","value":"\n├── storage                       "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 存储功能实现，主要维护 OpenSumi 内的各种缓存读写"}]},{"type":"text","value":"\n├── task                          "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 任务功能实现，并提供标准的 VS Code Task API"}]},{"type":"text","value":"\n├── terminal-next                 "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 终端功能实现，并提供标准的 VS Code Terminal API"}]},{"type":"text","value":"\n├── theme                         "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 颜色主题与图标主题功能实现，兼容 VS Code 图标、颜色主题，提供标准的 VS Code Theme 相关 ContributionPoint"}]},{"type":"text","value":"\n├── toolbar                       "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 工具栏功能实现，提供 OpenSumi 扩展的 Toolbar 相关 API"}]},{"type":"text","value":"\n├── types                         "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# OpenSumi 插件类型声明模块，包含 OpenSumi 兼容的全部 VS Code API 类型声明"}]},{"type":"text","value":"\n├── userstorage                   "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 用户缓存功能实现"}]},{"type":"text","value":"\n├── variable                      "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 提供运行时各种「魔法变量」的管理与实现，例如在 Task 功能的配置文件中 tasks.json 中，可以通过 ${WorkspaceFolder} 来获取到当前的工作目录"}]},{"type":"text","value":"\n├── webview                       "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# Webview 功能实现，包含多种 Webview 组件及能力，提供了标准的 VS Code Webview API"}]},{"type":"text","value":"\n├── workspace                     "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 工作区功能实现，用于管理当前 OpenSumi 打开的工作区，并支持多工作区功能"}]},{"type":"text","value":"\n└── workspace-edit                "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# 封装了工作区级别的编辑，例如撤销一个重命名时，需要同时调用 WorkspaceEdit 相关功能实现文件级别的撤销"}]}]}]}]}],"data":{"quirksMode":false}},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97%E4%BB%8B%E7%BB%8D\">核心模块介绍</a></p>\n<ul>\n<li><a href=\"#core-browser\">Core Browser</a></li>\n<li><a href=\"#core-node\">Core Node</a></li>\n<li><a href=\"#monaco\">Monaco</a></li>\n<li><a href=\"#file-service\">File Service</a></li>\n<li><a href=\"#file-tree-next\">File Tree Next</a></li>\n<li><a href=\"#terminal-next\">Terminal Next</a></li>\n<li><a href=\"#opensumi-extension\">OpenSumi Extension</a></li>\n<li><a href=\"#extension-manager\">Extension Manager</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E6%A8%A1%E5%9D%97%E5%88%86%E5%B1%82\">模块分层</a></p>\n</li>\n<li>\n<p><a href=\"#%E6%A8%A1%E5%9D%97%E5%88%97%E8%A1%A8%E5%8F%8A%E6%A6%82%E8%BF%B0\">模块列表及概述</a></p>\n</li>\n</ul>","fields":{"slug":"/zh/docs/develop/basic-design/core-modules"},"frontmatter":{"title":"核心模块"},"parent":{"relativePath":"develop/basic-design/core-modules.zh.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/docs/integrate/overview"},"frontmatter":{"title":"Introduction","order":0}}},{"node":{"fields":{"slug":"/zh/docs/integrate/overview"},"frontmatter":{"title":"框架介绍","order":0}}},{"node":{"fields":{"slug":"/en/docs/extension/overview"},"frontmatter":{"title":"How To Develop Extension","order":0}}},{"node":{"fields":{"slug":"/zh/docs/extension/overview"},"frontmatter":{"title":"如何开发插件","order":0}}},{"node":{"fields":{"slug":"/en/docs/extension/vscode/overview"},"frontmatter":{"title":"How To Start","order":0}}},{"node":{"fields":{"slug":"/zh/docs/extension/vscode/overview"},"frontmatter":{"title":"如何开始","order":0}}},{"node":{"fields":{"slug":"/en/docs/integrate/universal-integrate-case/custom-config"},"frontmatter":{"title":"Custom Config","order":1}}},{"node":{"fields":{"slug":"/zh/docs/integrate/universal-integrate-case/custom-config"},"frontmatter":{"title":"自定义配置","order":1}}},{"node":{"fields":{"slug":"/en/docs/integrate/quick-start/web"},"frontmatter":{"title":"Quick Start（Web）","order":1}}},{"node":{"fields":{"slug":"/zh/docs/integrate/quick-start/web"},"frontmatter":{"title":"快速开始（Web）","order":1}}},{"node":{"fields":{"slug":"/en/docs/integrate/module-usage/3-way-merge-editor"},"frontmatter":{"title":"Using 3-way view new interaction","order":1}}},{"node":{"fields":{"slug":"/zh/docs/integrate/module-usage/3-way-merge-editor"},"frontmatter":{"title":"使用 3-way 视图新交互","order":1}}},{"node":{"fields":{"slug":"/zh/docs/integrate/module-usage/collaboration"},"frontmatter":{"title":"协同编辑模块","order":1}}},{"node":{"fields":{"slug":"/en/docs/integrate/module-usage/collaboration"},"frontmatter":{"title":"Collaboration Module","order":1}}},{"node":{"fields":{"slug":"/en/docs/integrate/browser-extension/shortcuts-guard"},"frontmatter":{"title":"Shortcuts Guard","order":1}}},{"node":{"fields":{"slug":"/zh/docs/integrate/browser-extension/shortcuts-guard"},"frontmatter":{"title":"Shortcuts Guard","order":1}}},{"node":{"fields":{"slug":"/zh/docs/extension/quick-start"},"frontmatter":{"title":"快速开始","order":1}}},{"node":{"fields":{"slug":"/en/docs/extension/quick-start"},"frontmatter":{"title":"Quick Start","order":1}}},{"node":{"fields":{"slug":"/zh/docs/extension/interface/toolbar"},"frontmatter":{"title":"Toolbar","order":1}}},{"node":{"fields":{"slug":"/en/docs/extension/interface/toolbar"},"frontmatter":{"title":"Toolbar","order":1}}},{"node":{"fields":{"slug":"/en/docs/extension/develop/built-in-icon"},"frontmatter":{"title":"Built-in Icons","order":1}}},{"node":{"fields":{"slug":"/zh/docs/extension/develop/built-in-icon"},"frontmatter":{"title":"内置图标","order":1}}},{"node":{"fields":{"slug":"/en/docs/extension/contributes/toolbar"},"frontmatter":{"title":"Toolbar","order":1}}},{"node":{"fields":{"slug":"/zh/docs/extension/contributes/toolbar"},"frontmatter":{"title":"Toolbar","order":1}}},{"node":{"fields":{"slug":"/en/docs/develop/how-to-contribute"},"frontmatter":{"title":"How To Contribute","order":1}}},{"node":{"fields":{"slug":"/zh/docs/develop/how-to-contribute"},"frontmatter":{"title":"如何贡献代码","order":1}}},{"node":{"fields":{"slug":"/en/docs/develop/sample/overview"},"frontmatter":{"title":"Case Introduction","order":1}}},{"node":{"fields":{"slug":"/zh/docs/develop/sample/overview"},"frontmatter":{"title":"案例介绍","order":1}}},{"node":{"fields":{"slug":"/en/docs/develop/basic-design/core-idea"},"frontmatter":{"title":"Core Idea","order":1}}},{"node":{"fields":{"slug":"/zh/docs/develop/basic-design/core-idea"},"frontmatter":{"title":"核心概念","order":1}}},{"node":{"fields":{"slug":"/en/docs/integrate/universal-integrate-case/custom-menu"},"frontmatter":{"title":"Custom Menu","order":2}}},{"node":{"fields":{"slug":"/zh/docs/integrate/universal-integrate-case/custom-menu"},"frontmatter":{"title":"自定义菜单","order":2}}},{"node":{"fields":{"slug":"/zh/docs/integrate/quick-start/electron"},"frontmatter":{"title":"快速开始（Electron）","order":2}}},{"node":{"fields":{"slug":"/en/docs/integrate/quick-start/electron"},"frontmatter":{"title":"Quick Start（Electron）","order":2}}},{"node":{"fields":{"slug":"/en/docs/integrate/browser-extension/opensumi-devtools"},"frontmatter":{"title":"OpenSumi DevTools","order":2}}},{"node":{"fields":{"slug":"/zh/docs/integrate/browser-extension/opensumi-devtools"},"frontmatter":{"title":"OpenSumi DevTools","order":2}}},{"node":{"fields":{"slug":"/en/docs/extension/web-extension"},"frontmatter":{"title":"Web Extensions","order":2}}},{"node":{"fields":{"slug":"/zh/docs/extension/web-extension"},"frontmatter":{"title":"纯前端插件（Web Extensions）","order":2}}},{"node":{"fields":{"slug":"/zh/docs/extension/interface/use-event"},"frontmatter":{"title":"Event","order":2}}},{"node":{"fields":{"slug":"/en/docs/extension/develop/built-in-command"},"frontmatter":{"title":"Built-in Command","order":2}}},{"node":{"fields":{"slug":"/zh/docs/extension/develop/built-in-command"},"frontmatter":{"title":"内置命令","order":2}}},{"node":{"fields":{"slug":"/en/docs/extension/interface/use-event"},"frontmatter":{"title":"Event","order":2}}},{"node":{"fields":{"slug":"/zh/docs/extension/contributes/menubars"},"frontmatter":{"title":"Menubars","order":2}}},{"node":{"fields":{"slug":"/en/docs/extension/contributes/menubars"},"frontmatter":{"title":"Menubars","order":2}}},{"node":{"fields":{"slug":"/zh/docs/develop/how-to-design-module"},"frontmatter":{"title":"如何设计模块","order":2}}},{"node":{"fields":{"slug":"/en/docs/develop/how-to-design-module"},"frontmatter":{"title":"How to Design Modules","order":2}}},{"node":{"fields":{"slug":"/zh/docs/develop/sample/create-module"},"frontmatter":{"title":"创建模块","order":2}}},{"node":{"fields":{"slug":"/en/docs/develop/sample/create-module"},"frontmatter":{"title":"Create Module","order":2}}},{"node":{"fields":{"slug":"/en/docs/develop/basic-design/lifecycle"},"frontmatter":{"title":"Application Lifecycle","order":2}}},{"node":{"fields":{"slug":"/zh/docs/develop/basic-design/lifecycle"},"frontmatter":{"title":"应用生命周期","order":2}}},{"node":{"fields":{"slug":"/en/docs/integrate/universal-integrate-case/custom-view"},"frontmatter":{"title":"Custom View","order":3}}},{"node":{"fields":{"slug":"/zh/docs/integrate/universal-integrate-case/custom-view"},"frontmatter":{"title":"自定义视图","order":3}}},{"node":{"fields":{"slug":"/en/docs/integrate/quick-start/lite"},"frontmatter":{"title":"Quick Start（Pure Front End）","order":3}}},{"node":{"fields":{"slug":"/zh/docs/integrate/quick-start/lite"},"frontmatter":{"title":"快速开始（纯前端）","order":3}}},{"node":{"fields":{"slug":"/en/docs/integrate/module-usage/terminal-basic-usage"},"frontmatter":{"title":"Basic Terminal Usage","order":3}}},{"node":{"fields":{"slug":"/zh/docs/integrate/module-usage/terminal-basic-usage"},"frontmatter":{"title":"如何使用终端","order":3}}},{"node":{"fields":{"slug":"/en/docs/extension/interface/i18n"},"frontmatter":{"title":"i18n","order":3}}},{"node":{"fields":{"slug":"/zh/docs/extension/interface/i18n"},"frontmatter":{"title":"i18n","order":3}}},{"node":{"fields":{"slug":"/en/docs/extension/develop/built-in-component"},"frontmatter":{"title":"Built-in Component","order":3}}},{"node":{"fields":{"slug":"/zh/docs/extension/develop/built-in-component"},"frontmatter":{"title":"内置组件","order":3}}},{"node":{"fields":{"slug":"/en/docs/extension/contributes/submenus"},"frontmatter":{"title":"SubMenus","order":3}}},{"node":{"fields":{"slug":"/zh/docs/extension/contributes/submenus"},"frontmatter":{"title":"SubMenus","order":3}}},{"node":{"fields":{"slug":"/en/docs/develop/module-samples"},"frontmatter":{"title":"Module Samples","order":3}}},{"node":{"fields":{"slug":"/zh/docs/develop/module-samples"},"frontmatter":{"title":"模块开发案例","order":3}}},{"node":{"fields":{"slug":"/en/docs/develop/sample/use-contribution-point"},"frontmatter":{"title":"Use Contribution Point","order":3}}},{"node":{"fields":{"slug":"/zh/docs/develop/sample/use-contribution-point"},"frontmatter":{"title":"使用贡献点","order":3}}},{"node":{"fields":{"slug":"/en/docs/develop/basic-design/extension-mechanism"},"frontmatter":{"title":"Extension Mechanism","order":3}}},{"node":{"fields":{"slug":"/zh/docs/develop/basic-design/extension-mechanism"},"frontmatter":{"title":"插件机制","order":3}}},{"node":{"fields":{"slug":"/en/docs/integrate/universal-integrate-case/custom-command"},"frontmatter":{"title":"Custom Command","order":4}}},{"node":{"fields":{"slug":"/zh/docs/integrate/universal-integrate-case/custom-command"},"frontmatter":{"title":"自定义命令","order":4}}},{"node":{"fields":{"slug":"/en/docs/integrate/extensions-usage/language-for-java"},"frontmatter":{"title":"Java Project Supporting Extensions","order":4}}},{"node":{"fields":{"slug":"/zh/docs/integrate/extensions-usage/language-for-java"},"frontmatter":{"title":"Java 项目配套插件","order":4}}},{"node":{"fields":{"slug":"/en/docs/extension/interface/layout"},"frontmatter":{"title":"Layout","order":4}}},{"node":{"fields":{"slug":"/zh/docs/extension/interface/layout"},"frontmatter":{"title":"Layout","order":4}}},{"node":{"fields":{"slug":"/en/docs/extension/develop/connection-mode"},"frontmatter":{"title":"Connection Mode","order":4}}},{"node":{"fields":{"slug":"/zh/docs/extension/develop/connection-mode"},"frontmatter":{"title":"通信模型","order":4}}},{"node":{"fields":{"slug":"/en/docs/develop/sample/display-list"},"frontmatter":{"title":"Display List","order":4}}},{"node":{"fields":{"slug":"/zh/docs/develop/sample/display-list"},"frontmatter":{"title":"展示一个列表","order":4}}},{"node":{"fields":{"slug":"/en/docs/develop/basic-design/dependence-injector"},"frontmatter":{"title":"Dependence Injector","order":4}}},{"node":{"fields":{"slug":"/zh/docs/develop/basic-design/dependence-injector"},"frontmatter":{"title":"依赖注入","order":4}}},{"node":{"fields":{"slug":"/en/docs/integrate/universal-integrate-case/custom-keybinding"},"frontmatter":{"title":"Custom Keybinding","order":5}}},{"node":{"fields":{"slug":"/zh/docs/integrate/universal-integrate-case/custom-keybinding"},"frontmatter":{"title":"自定义快捷键","order":5}}},{"node":{"fields":{"slug":"/en/docs/extension/interface/terminal"},"frontmatter":{"title":"Terminal","order":5}}},{"node":{"fields":{"slug":"/zh/docs/extension/interface/terminal"},"frontmatter":{"title":"Terminal","order":5}}},{"node":{"fields":{"slug":"/en/docs/extension/develop/view-isolate"},"frontmatter":{"title":"View Isolation Considerations","order":5}}},{"node":{"fields":{"slug":"/zh/docs/extension/develop/view-isolate"},"frontmatter":{"title":"视图隔离注意事项","order":5}}},{"node":{"fields":{"slug":"/en/docs/develop/sample/use-service-by-di"},"frontmatter":{"title":"Register and Use the service by DI","order":5}}},{"node":{"fields":{"slug":"/zh/docs/develop/sample/use-service-by-di"},"frontmatter":{"title":"通过 DI 注册并使用服务","order":5}}},{"node":{"fields":{"slug":"/en/docs/develop/basic-design/contribution-point"},"frontmatter":{"title":"Contribution Point Mechanism","order":5}}},{"node":{"fields":{"slug":"/zh/docs/develop/basic-design/contribution-point"},"frontmatter":{"title":"贡献点机制","order":5}}},{"node":{"fields":{"slug":"/en/docs/integrate/universal-integrate-case/custom-reporter"},"frontmatter":{"title":"Custom Tracking Reporter","order":6}}},{"node":{"fields":{"slug":"/zh/docs/integrate/universal-integrate-case/custom-reporter"},"frontmatter":{"title":"自定义埋点上报","order":6}}},{"node":{"fields":{"slug":"/en/docs/develop/sample/connection-between-browser-and-node"},"frontmatter":{"title":"Front-end and Back-end Connection Implementation","order":6}}},{"node":{"fields":{"slug":"/zh/docs/develop/sample/connection-between-browser-and-node"},"frontmatter":{"title":"实现前后端通信","order":6}}},{"node":{"fields":{"slug":"/en/docs/develop/basic-design/core-modules"},"frontmatter":{"title":"Core Modules","order":6}}},{"node":{"fields":{"slug":"/zh/docs/develop/basic-design/core-modules"},"frontmatter":{"title":"核心模块","order":6}}},{"node":{"fields":{"slug":"/en/docs/integrate/universal-integrate-case/custom-readonly-mode"},"frontmatter":{"title":"Custom Read-only Mode","order":7}}},{"node":{"fields":{"slug":"/zh/docs/integrate/universal-integrate-case/custom-readonly-mode"},"frontmatter":{"title":"自定义只读模式","order":7}}},{"node":{"fields":{"slug":"/en/docs/develop/basic-design/connection"},"frontmatter":{"title":"Front and Back Communication","order":7}}},{"node":{"fields":{"slug":"/zh/docs/develop/basic-design/connection"},"frontmatter":{"title":"前后端通信","order":7}}},{"node":{"fields":{"slug":"/en/docs/integrate/universal-integrate-case/custom-marketplace-entrypoint"},"frontmatter":{"title":"Custom Extension Marketplace","order":8}}},{"node":{"fields":{"slug":"/zh/docs/integrate/universal-integrate-case/custom-marketplace-entrypoint"},"frontmatter":{"title":"自定义插件市场镜像源","order":8}}},{"node":{"fields":{"slug":"/en/docs/integrate/universal-integrate-case/offline-deployment"},"frontmatter":{"title":"Offline Deployment","order":9}}},{"node":{"fields":{"slug":"/zh/docs/integrate/universal-integrate-case/offline-deployment"},"frontmatter":{"title":"离线部署","order":9}}},{"node":{"fields":{"slug":"/zh/docs/extension/interface/custom-editor-component"},"frontmatter":{"title":"自定义编辑器组件","order":9}}},{"node":{"fields":{"slug":"/en/docs/extension/interface/custom-editor-component"},"frontmatter":{"title":"Custom Editor Component","order":9}}},{"node":{"fields":{"slug":"/en/docs/extension/interface/use-builtin-component"},"frontmatter":{"title":"Use Components","order":10}}},{"node":{"fields":{"slug":"/zh/docs/extension/interface/use-builtin-component"},"frontmatter":{"title":"Components","order":10}}},{"node":{"fields":{"slug":"/zh/docs/develop/module-apis/decoration"},"frontmatter":{"title":"装饰器模块","order":null}}},{"node":{"fields":{"slug":"/en/docs/develop/module-apis/editor"},"frontmatter":{"title":"Editor Mode","order":null}}},{"node":{"fields":{"slug":"/en/docs/develop/module-apis/decoration"},"frontmatter":{"title":"Decoration Module","order":null}}},{"node":{"fields":{"slug":"/zh/docs/develop/module-apis/editor"},"frontmatter":{"title":"编辑器模块","order":null}}},{"node":{"fields":{"slug":"/zh/docs/develop/module-apis/layout"},"frontmatter":{"title":"布局模块","order":null}}},{"node":{"fields":{"slug":"/en/docs/develop/module-apis/layout"},"frontmatter":{"title":"Layout Module","order":null}}},{"node":{"fields":{"slug":"/en/docs/develop/module-apis/overlay"},"frontmatter":{"title":"Overlay Module","order":null}}},{"node":{"fields":{"slug":"/zh/docs/develop/module-apis/overlay"},"frontmatter":{"title":"浮层模块","order":null}}},{"node":{"fields":{"slug":"/en/docs/develop/module-apis/preference"},"frontmatter":{"title":"Preference Module","order":null}}},{"node":{"fields":{"slug":"/zh/docs/develop/module-apis/preference"},"frontmatter":{"title":"配置模块","order":null}}}]}},"pageContext":{"examples":[]}},"staticQueryHashes":["2870459043","3000541721"]}